<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="example.infrastructure.datasource.pack.packMapper">

<resultMap id="packMap" type="example.domain.model.pack.Pack">

      <association property="id" javaType="example.domain.model.pack.PackId">
            <constructor>
                  <arg name="value" column="pack_id"/>
            </constructor>
      </association>
      <association property="title" javaType="example.domain.model.pack.PackTitle">
            <constructor>
                  <arg name="value" column="title"/>
            </constructor>
      </association>

      <collection property="words" ofType="example.domain.model.word.Word">
            <association property="id" javaType="example.domain.model.word.WordId">
                  <constructor>
                        <arg name="value" column="word_id"/>
                  </constructor>
            </association>
            <association property="characterString" javaType="example.domain.model.word.CharacterString">
                  <constructor>
                        <arg name="value" column="character_string"/>
                  </constructor>
            </association>
      </collection>
</resultMap>

<resultMap id="wordMap" type="example.domain.model.word.Word">
      <association property="id" javaType="example.domain.model.word.WordId">
            <constructor>
                  <arg name="value" column="id"/>
            </constructor>
      </association>
      <association property="characterString" javaType="example.domain.model.word.CharacterString">
            <constructor>
                  <arg name="value" column="character_string"/>
            </constructor>
      </association>
</resultMap>


<select id="selectOne" resultMap="packMap" parameterType="map">
      SELECT pack.id as pack_id, title, word.id as word_id, character_string FROM pack INNER JOIN word ON pack.id = word.pack_id WHERE pack_id = #{packId.value}
</select>

<select id="selectWordsInPack" resultMap="wordMap">
      SELECT id, character_string FROM word WHERE pack_id = #{packId.value}
</select>

<select id="selectAll" resultMap="packMap">
      SELECT pack.id as pack_id, title, word.id as word_id, character_string FROM pack INNER JOIN word ON pack.id = word.pack_id
</select>

<select id="registerNew" resultType="example.domain.model.pack.PackId">
      SELECT LAST_INSERT_ID()
</select>

<select id="selectPacksByWord" resultMap="packMap" parameterType="string">
      SELECT pack.id as pack_id, title, word.id as word_id, character_string FROM pack INNER JOIN word ON pack.id = word.pack_id WHERE title like '%${word}%'
</select>


<insert id="insertPack" parameterType="example.infrastructure.mybatisEntity.PackEntity" useGeneratedKeys="true" keyProperty="packId">
      INSERT INTO pack (title) VALUES (#{title.value})
</insert>

<insert id="insertWord" parameterType="example.infrastructure.mybatisEntity.WordEntity" useGeneratedKeys="true" keyProperty="wordId">
      INSERT INTO word (character_string,pack_id) VALUES (#{characterString.value},#{packId.value})
</insert>

<update id="updatePack" parameterType="example.infrastructure.mybatisEntity.PackEntity">
      UPDATE pack SET title = #{packTitle.value} WHERE id = #{packId.value}
</update>

<update id="updateWord" parameterType="example.infrastructure.mybatisEntity.WordEntity">
      UPDATE word SET character_string = #{characterString.value} WHERE id = #{wordId.value}
</update>

<delete id="deletePack">
      DELETE from pack WHERE id = #{value}
</delete>

<delete id="deleteWord">
      DELETE from word WHERE id = #{wordId.value}
</delete>

<delete id="deleteWordsInPack">
      DELETE from word WHERE pack_id = #{value}
</delete>

</mapper>